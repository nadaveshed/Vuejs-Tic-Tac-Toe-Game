{"remainingRequest":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nadav\\Desktop\\tic-tac-toe\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\src\\App.vue","mtime":1642927583782},{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\css-loader\\dist\\cjs.js","mtime":1642499326756},{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1642499327576},{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\postcss-loader\\src\\index.js","mtime":1642499327086},{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1642499326371},{"path":"C:\\Users\\nadav\\Desktop\\tic-tac-toe\\node_modules\\vue-loader\\lib\\index.js","mtime":1642499327297}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKfQoKLmNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCi5nYW1lIHsKICBkaXNwbGF5OiBncmlkOwogIHdpZHRoOiAzMDBweDsKICBoZWlnaHQ6IDMwMHB4OwogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogYXV0byBhdXRvIGF1dG87Cn0KCi5jZWxsIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDBweDsKICBoZWlnaHQ6IDEwMHB4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZm9udC1zaXplOiAzcmVtOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGJvcmRlcjogM3B4IHNvbGlkIGJsYWNrOwogIC8qdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzIGVhc2UtaW4tb3V0OyovCn0KCiNjZWxsMCwKI2NlbGwxLAojY2VsbDIgewogIGJvcmRlci10b3A6IG5vbmU7Cn0KI2NlbGwwLAojY2VsbDMsCiNjZWxsNiB7CiAgYm9yZGVyLWxlZnQ6IG5vbmU7Cn0KI2NlbGw2LAojY2VsbDcsCiNjZWxsOCB7CiAgYm9yZGVyLWJvdHRvbTogbm9uZTsKfQojY2VsbDIsCiNjZWxsNSwKI2NlbGw4IHsKICBib3JkZXItcmlnaHQ6IG5vbmU7Cn0KYnV0dG9uIHsKICBvdXRsaW5lOiBub25lOwogIGJvcmRlcjogNHB4IHNvbGlkIGdyZWVuOwogIHBhZGRpbmc6IDEwcHggMjBweDsKICBmb250LXNpemU6IDFyZW07CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgYmFja2dyb3VuZDogbm9uZTsKICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluLW91dDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\n  <div class=\"container\">\n    <div>Tic tac toe</div>\n<!--    <p id=\"demo\">Player {{player}} turn</p>-->\n    <div class=\"game\">\n      <div id=\"cell0\" class=\"cell\" @click=\"play(0, false);\">{{ gameArray[0] }}</div>\n      <div id=\"cell1\" class=\"cell\" @click=\"play(1, false)\">{{ gameArray[1] }}</div>\n      <div id=\"cell2\" class=\"cell\" @click=\"play(2, false)\">{{ gameArray[2] }}</div>\n      <div id=\"cell3\" class=\"cell\" @click=\"play(3, false)\">{{ gameArray[3] }}</div>\n      <div id=\"cell4\" class=\"cell\" @click=\"play(4, false)\">{{ gameArray[4] }}</div>\n      <div id=\"cell5\" class=\"cell\" @click=\"play(5, false)\">{{ gameArray[5] }}</div>\n      <div id=\"cell6\" class=\"cell\" @click=\"play(6, false)\">{{ gameArray[6] }}</div>\n      <div id=\"cell7\" class=\"cell\" @click=\"play(7, false)\">{{ gameArray[7] }}</div>\n      <div id=\"cell8\" class=\"cell\" @click=\"play(8, false)\">{{ gameArray[8] }}</div>\n    </div>\n    <div class=\"gameResult\">\n      <div id=\"winner\" v-if=\"gameOver\"> Winner is {{winner}} </div>\n      <div v-if=\"tie\"> Game is Tie </div>\n    </div>\n    <button @click=\"resetBoard()\" v-if=\"gameOver || tie\">RESET BOARD</button>\n\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client'\nconst socket = io(\"http://localhost:3000\")\nexport default {\n  name: 'App',\n  components: {\n  },\n  data() {\n    return {\n      gameArray: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      currentTurn: \"\",\n      winner: \"\",\n      tie: false,\n      player: \"1\",\n      playerTurn: true,\n      gameOver: false,\n    }\n  },\n  methods: {\n    play(index, drawFromOther) {\n\n      if(!this.gameOver) {\n        if (this.playerTurn) {\n          this.gameArray[index] = \"X\"\n        } else {\n          this.gameArray[index] = \"O\"\n        }\n        document.getElementById(`cell${index}`).innerHTML = this.gameArray[index];\n        if (!drawFromOther) {\n          socket.emit(\"play\", index, this.player)\n        }\n        console.log(\"content\", this.gameArray)\n        this.playerTurn = !this.playerTurn;\n        // this.playerT()\n        this.checkForWin();\n        this.checkForTie();\n      }\n    },\n    playerT() {\n      if(this.playerTurn) {\n        this.player = \" player 1\"\n      } else {\n        this.player = \" player 2\"\n      }\n    },\n    checkForWin() {\n      const winsCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n      for (let i = 0; i < winsCombinations.length; i++) {\n        let firstIndex = winsCombinations[i][0];\n        let secondIndex = winsCombinations[i][1];\n        let thirdIndex = winsCombinations[i][2];\n        if(this.gameArray[firstIndex] == this.gameArray[secondIndex] &&\n            this.gameArray[firstIndex] == this.gameArray[thirdIndex] &&\n            this.gameArray[firstIndex] != \"\") {\n          this.gameOver = true;\n\n          this.winner = this.gameArray[firstIndex];\n        }\n      }\n    },\n    checkForTie(){\n      for (let i = 0 ; i<= 8 ; i++) {\n        if(this.gameArray[i] == \"\") {\n          return\n        }\n      }\n      this.tie = true;\n    },\n    resetBoard() {\n      for (let i=0; i<= 8; i++) {\n        this.gameArray[i] = \"\"\n        this.gameOver = false;\n        this.winner = null\n        this.tie = false\n        document.getElementById(`cell${i}`).innerHTML = this.gameArray[i];\n      }\n    }\n  },\n  created() {\n    socket.on(\"play\", (index) => {\n      console.log(\"received index\", index)\n      this.play(index, true, \"player 1\")\n    })\n  }\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.game {\n  display: grid;\n  width: 300px;\n  height: 300px;\n  grid-template-columns: auto auto auto;\n}\n\n.cell {\n  display: flex;\n  width: 100px;\n  height: 100px;\n  align-items: center;\n  justify-content: center;\n  font-size: 3rem;\n  font-weight: bold;\n  border: 3px solid black;\n  /*transition: background 0.2s ease-in-out;*/\n}\n\n#cell0,\n#cell1,\n#cell2 {\n  border-top: none;\n}\n#cell0,\n#cell3,\n#cell6 {\n  border-left: none;\n}\n#cell6,\n#cell7,\n#cell8 {\n  border-bottom: none;\n}\n#cell2,\n#cell5,\n#cell8 {\n  border-right: none;\n}\nbutton {\n  outline: none;\n  border: 4px solid green;\n  padding: 10px 20px;\n  font-size: 1rem;\n  font-weight: bold;\n  background: none;\n  transition: all 0.2s ease-in-out;\n}\n</style>"]}]}